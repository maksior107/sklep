
akka {
  # Auth token cleaner
  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }
}

play.http.secret.key = "changeme"

play.modules.enabled += "modules.BaseModule"
play.modules.enabled += "modules.JobModule"
play.modules.enabled += "modules.SilhouetteModule"
play.modules.enabled += "play.api.libs.mailer.MailerModule"

play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"


play.i18n {
  # The application languages
  langs = [ "en" ]

}
play.http.filters = "global.Filters"
play.http.filters = "utils.Filters"

play.http {
  session {
  }
  requestHandler = "play.api.http.DefaultHttpRequestHandler"

  flash {
  }
}

play.server.netty {
}

play.ws {
  ssl {
  }
}

play.cache {
}

play.filters {
  disabled += play.filters.csrf.CSRFFilter
  enabled += "play.filters.cors.CORSFilter"
}

play.filters {
  cors {

  }
  csrf {
  }

  headers {
    contentSecurityPolicy = "default-src 'self';"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' cdnjs.cloudflare.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' twitter.com *.xing.com;"
  }

  hosts {
    allowed = ["localhost:9000", "localhost:8080"]
  }
}

play.evolutions {
    enabled=true
    db.default.enabled = true
}

play.db {
  prototype {
  }
}

db {

}

slick.dbs.default.driver="slick.driver.SQLiteDriver$"
slick.dbs.default.db.driver="org.sqlite.JDBC"
slick.dbs.default.db.url="jdbc:sqlite:sklep.sqlite"

include "silhouette.conf"
